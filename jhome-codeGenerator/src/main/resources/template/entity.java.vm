package ${package.Entity};

#foreach($pkg in ${table.importPackages})
import ${pkg};
#end
#if(${swagger2})
import io.swagger.annotations.*;
import com.fasterxml.jackson.annotation.*;
import org.springframework.format.annotation.DateTimeFormat;
import com.bracket.common.Bus.AbstractModel.PageInfoRequest;
import com.baomidou.mybatisplus.annotation.*;
#end
#if(${entityLombokModel})
import lombok.Data;
import lombok.EqualsAndHashCode;
    #if(${chainModel})
    import lombok.experimental.Accessors;
    #end
#end


/**
 //
 //                       .::::.
 //                     .::::::::.
 //                    :::::::::::
 //                 ..:::::::::::'
 //              '::::::::::::'
 //                .::::::::::
 //           '::::::::::::::..
 //                ..::::::::::::.
 //              ``::::::::::::::::
 //               ::::``:::::::::'        .:::.
 //              ::::'   ':::::'       .::::::::.
 //            .::::'      ::::     .:::::::'::::.
 //           .:::'       :::::  .:::::::::' ':::::.
 //          .::'        :::::.:::::::::'      ':::::.
 //         .::'         ::::::::::::::'         ``::::.
 //     ...:::           ::::::::::::'              ``::.
 //    ```` ':.          ':::::::::'                  ::::..
 //                       '.:::::'                    ':'````..
 * @description: $!{table.comment}对象
 * @author:  ${author}
 * @create: ${date}
 **/
#if(${entityLombokModel})
@Data
@JsonInclude(JsonInclude.Include.NON_NULL)
    #if(${superEntityClass})
    @EqualsAndHashCode(callSuper = true)
    #else
    @EqualsAndHashCode(callSuper = false)
    #end
    #if(${chainModel})
    @Accessors(chain = true)
    #end
#end

#if(${swagger2})
    #if(${author.equals("1")})
    @TableName("${table.name}")
    @ApiModel(value = "${entity}对象", description = "$!{table.comment}")
    #end
    #if(${author.equals("2")})
    @ApiModel(value = "${entity} 查询对象", description = "$!{table.comment}")
    #end
#end
#if(${superEntityClass})
    #if(${author.equals("1")})
    public class ${entity} extends Model#if(${activeRecord})<${entity}>#end {
    #elseif(${author.equals("2")})
    public class ${entity} extends PageInfoRequest {
    #end

#elseif(${activeRecord})
    #if(${author.equals("1")})
    public class ${entity} extends Model#if(${activeRecord})<${entity}>#end {
    #elseif(${author.equals("2")})
    public class ${entity} extends PageInfoRequest {

    #end
#else
    #if(${author.equals("1")})
    public class ${entity} extends Model#if(${activeRecord})<${entity}>#end {
    #elseif(${author.equals("2")})
    public class ${entity} extends PageInfoRequest {
    #end
#end

#if(${entitySerialVersionUID})
    #if(${author.equals("1")})
    private static final long serialVersionUID=1L;
    #end
#end
## ----------  BEGIN 字段循环遍历  ----------
#foreach($field in ${table.fields})
    #if(${field.keyFlag})
        #set($keyPropertyName=${field.propertyName})
    #end
    #if("$!field.comment" != "")
        #if(${swagger2})
        @ApiModelProperty(value = "${field.comment}")
        #else
        /**
         * ${field.comment}
         */
        #end
    #end
    #if(${field.propertyType.equals("Date")}||
        ${field.propertyType.equals("LocalDateTime")}||
        ${field.propertyType.equals("Time")})
    @JsonFormat(
            pattern = "yyyy-MM-dd HH:mm:ss",
            timezone = "GMT+8"
    )
    @DateTimeFormat(pattern = "yyyy-MM-dd HH:mm:ss")
    #end
    #if(${field.keyFlag})
        ## 主键
        #if(${field.keyIdentityFlag})
        @TableId(value = "`${field.propertyName}`", type = IdType.AUTO)
        #elseif(!$null.isNull(${idType}) && "$!idType" != "")
        @TableId(value = "`${field.propertyName}`", type = IdType.${idType})
        #elseif(${field.convert})
        @TableId("`${field.propertyName}`")
        #end
        ## 普通字段
    #else
        #if(${author.equals("1")})
        @TableField("`${field.propertyName}`")
        #end
    #end
    ## 乐观锁注解
    #if(${versionFieldName}==${field.name})
    @Version
    #end
    ## 逻辑删除注解
    #if(${logicDeleteFieldName}==${field.name})
    @TableLogic
    #end
private ${field.propertyType} ${field.propertyName};

#end
## ----------  END 字段循环遍历  ----------
#if(!${entityLombokModel})
    #foreach($field in ${table.fields})
        #if(${field.propertyType.equals("boolean")})
            #set($getprefix="is")
        #else
            #set($getprefix="get")
        #end
    public ${field.propertyType} ${getprefix}${field.capitalName}(){
            return ${field.propertyName};
            }
        #if(${chainModel})
        public ${entity} set${field.capitalName}(${field.propertyType} ${field.propertyName}){
        #else
        public void set${field.capitalName}(${field.propertyType} ${field.propertyName}) {
        #end
            this.${field.propertyName} = ${field.propertyName};
        #if(${chainModel})
                return this;
        #end
            }
    #end
    ## --foreach end---
#end
## --end of #if(!${entityLombokModel})--

#if(${entityColumnConstant})
    #foreach($field in ${table.fields})
    public static final String ${field.name.toUpperCase()} ="${field.name}";
    #end
#end
@Override
public String toString(){
        return"${entity}{"+
    #foreach($field in ${table.fields})
        #if($!{foreach.index}==0)
                "${field.propertyName}="+ ${field.propertyName} +
        #else
                ", ${field.propertyName}="+ ${field.propertyName} +
        #end
    #end
        "}";
        }
        }