package ${package.Service};

import ${package.Entity}.${entity};
import ${superServiceClassPackage};
import com.Util.common.ToolKit.ResponseJson;
import com.baomidou.mybatisplus.core.metadata.IPage;
import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
import java.util.List;
/**
 //
 //                       .::::.
 //                     .::::::::.
 //                    :::::::::::
 //                 ..:::::::::::'
 //              '::::::::::::'
 //                .::::::::::
 //           '::::::::::::::..
 //                ..::::::::::::.
 //              ``::::::::::::::::
 //               ::::``:::::::::'        .:::.
 //              ::::'   ':::::'       .::::::::.
 //            .::::'      ::::     .:::::::'::::.
 //           .:::'       :::::  .:::::::::' ':::::.
 //          .::'        :::::.:::::::::'      ':::::.
 //         .::'         ::::::::::::::'         ``::::.
 //     ...:::           ::::::::::::'              ``::.
 //    ```` ':.          ':::::::::'                  ::::..
 //                       '.:::::'                    ':'````..
 * @description: $!{table.comment} 服务类
 * @author:  ${author}
 * @create: ${date}
 **/
#if(${kotlin})
interface ${table.serviceName} : ${superServiceClass}<${entity}>
#else
public interface ${table.serviceName} extends ${superServiceClass}<${entity}> {

    /**
    * 添加对象
    */
    ResponseJson add${entity}(${entity}Query obj);
    /**
    * 编辑对象
    */
    ResponseJson edit${entity}(${entity}Query obj);
    /**
    * 删除对象
    */
    ResponseJson delete${entity}(${entity}Query obj);
    /**
    * 批量删除对象
    */
    ResponseJson batchDelete${entity}(String[]ids);
    /**
    * 分页系统
    */
    IPage<${entity}> select${entity}PageList(${entity}Query queryObject);


    /**
     * 根据Id获取 单个对象
     *
     * @param id
     * @return
     */
    ${entity} select${entity}ById(String id);

    /**
     * 根据Ids获取多个对象
     *
     * @param
     */
    List<${entity}> selectBatch${entity}ByIds(List<String> idList);

    /**
     * 根据条件获取某个对象
     * @param queryObject
     * @return
     */
    ${entity} select${entity}One(QueryWrapper<${entity}> queryObject);

    /**
     * 根据自定义条件获取对象实体集合
     * @param queryObject
     * @return
     */
    List<${entity}> select${entity}List(QueryWrapper<${entity}> queryObject);



        }
#end