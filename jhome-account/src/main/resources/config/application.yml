#================================================================================ 版本配置 settings ===========#

# 产品或项目名称、软件开发公司名称
productName: JHome-JavaHome 开发平台
companyName: JHome V1.0
# 产品版本、版权年份
productVersion: V1.0
copyrightYear: 2020
#================================================================================ server settings ===========#
server:
  port: 8100
  servlet:
    context-path: /jhome
  tomcat:
    uri-encoding: UTF-8

adminPath: ${jhome.sysproperties.adminPath}
foreignServerPath: ${jhome.sysproperties.foreignServerPath}
#================================================================================ System settings ===========#
jhome:
  # 系统参数
  sysproperties:
    # 管理基础路径
    adminPath: account
    # 前端基础路径
    foreignServerPath: RemoteService
    #Session 和Redis 缓存过期时间单位(秒) 40分钟
    expiredTime: 2400
    #消息服务配置
    queueconfig:
      #队列服务器地址
      hostName: 192.168.43.93
      #用户名
      userName: daxu
      #密码
      passWord: 13528764027
      #虚拟主机
      virtualHost: dxhost
    # redissconfig地址
    redissConfig:
      host: ${spring.redis.host}
      database: ${spring.redis.database}
      port: ${spring.redis.port}
      password: ${spring.redis.password}
      timeout: ${spring.redis.password}
    # 单点登录配置信息
    casConfig:
      clientName: SmartCampus #cas服务器名称
      serverUrl: #cas服务器认证地址
      projectUrl: http://127.0.0.1:8100/jhome/account #项目地址
      redirectUrl: #前段部署地址
      isEnable: false #是否启用Cas认证
    callbackUrl: http://xxxx.com #CAS单点登录退出地址
#================================================================================ 数据库配置地址 =============#
#================================================================================ Spring 基础配置信息 ===========#
spring:
  # 应用程序名称
  application:
    name: jhome-account
  # 当前环境名称（注意：不可设置为 test 它是单元测试专用的名称）
  profiles:
    active: default
    include: accountService
  # 打印横幅
  main:
    bannerMode: "CONSOLE"
    allow-bean-definition-overriding: true #遇到同样名字是否覆盖操作
  thymeleaf:
    prefix: classpath:/templates/  #prefix：指定模板所在的目录
    check-template-location: true  #check-tempate-location: 检查模板路径是否存在
    cache: false  #cache: 是否缓存，开发模式下设置为false，避免改了模板还要重启服务器，线上设置为true，可以提高性能。
    suffix: .html
    encoding: UTF-8
    #mode: HTML5
    servlet:
      content-type: text/html
  datasource:
    url: jdbc:mysql://192.168.40.129:3306/jhome # jdbc:mysql://10.1.137.101:3306/qas_ynjm_v184
    username: root
    password: 111111
    driver-class-name: com.mysql.cj.jdbc.Driver
    type: com.alibaba.druid.pool.DruidDataSource
    
  redis:
    host: 192.168.52.130 #10.1.20.66 #10.1.20.66 #192.168.40.129 #192.168.52.130
    database: 0
    port: 6379
    password: 123456
    timeout: 10000
    #客户端超时毫秒数
  cloud:
    loadbalancer:
      ribbon:
        enabled: false

#================================================================================  日志配置 ===========#
#logging:
#  config: classpath:/config/logback-spring.xml

#================================================================================ Shrio 基础配置信息 ===========#
#    /f/**: authc,
#    /a/**: authc,  #LoginUrl: /${jhome.sysproperties.adminPath}/userAuthentication/login
shiro:
  filterChainDefinitionMap: |

    /login:anon,
    /logout:anon,
    /css/**:anon,
    /images/**:anon,
    /script/**:anon,
    /RemoteService/**:anon,
    /sso/**:anon,
    /swagger-ui.html:anon,
    /webjars/**:anon,
    /v2/**:anon,
    /swagger-resources/**:anon,
    /web/**:authc,
    /account/index:casSecurityFilter,
    /account/callback**:callbackFilter,
    /**:casSecurityFilter,
    /account/**:authc,
    /**:authc

  LoginUrl: /${adminPath}/login
  UnauthorizedUrl: /${adminPath}/userAuthentication/error

#================================================================================ mybatis plus 基础配置信息 ===========#
mybatis-plus:
  # xml扫描，多个目录用逗号或者分号分隔（告诉 Mapper 所对应的 XML 文件位置）
  mapper-locations: classpath:/mapper/*Mapper.xml
  # 以下配置均有默认值,可以不设置
  global-config:
    db-config:
      #主键类型  auto:"数据库ID自增" 1:"用户输入ID",2:"全局唯一ID (数字类型唯一ID)", 3:"全局唯一ID UUID";
      id-type: auto
      #字段策略 IGNORED:"忽略判断"  NOT_NULL:"非 NULL 判断")  NOT_EMPTY:"非空判断"
      field-strategy: NOT_EMPTY
      #数据库类型
      db-type: MYSQL
  configuration:
    # 是否开启自动驼峰命名规则映射:从数据库列名到Java属性驼峰命名的类似映射
    map-underscore-to-camel-case: true
    # 如果查询结果中包含空值的列，则 MyBatis 在映射的时候，不会映射这个字段
    call-setters-on-nulls: true
    # 这个配置会将执行的sql打印出来，在开发或测试的时候可以用
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
#================================================================================ thymeleaf 基础配置信息 ========#

#================================================================================ 分页配置 ================#
#pagehelper:
#  helper-dialect: mysql
#  reasonable: true
#  support-methods-arguments: true
#  params: count=countSql

#================================================================================ 消息队列服务器地址  ========#

#================================================================================  eureka配置 ================#
###服务注册到eureka注册中心的地址
eureka:
  client:
    serviceUrl:
      defaultZone: http://daxunihao:123456@127.0.0.1:9100/jhome/eureka/
      ###defaultZone: http://daxunihao:123456@127.0.0.1:9100/jhome/eureka/,http://daxunihao:123456@127.0.0.1:9200/jhome/eureka/
    ###因为该应用为服务提供者，是eureka的一个客户端，需要注册到注册中心
    registerWithEureka: true
    ###是否需要从eureka上检索服务
    fetchRegistry: false
  instance:
    #    instance-id: ${spring.application.name}:${server.port} 账户服务
    preferIpAddress: true #将自己的ip地址注册到Eureka服务中
    ipAddress: 127.0.0.1
#    hostname: 127.0.0.1

#ribbon:
#  eureka:
#    enabled: true