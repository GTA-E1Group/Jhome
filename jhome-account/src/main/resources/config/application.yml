# 产品或项目名称、软件开发公司名称
productName: JHome-JavaHome 开发平台
companyName: JHome V1.0
# 产品版本、版权年份
productVersion: V1.0
copyrightYear: 2020

adminPath: ${jhome.sysproperties.adminPath}
foreignServerPath: ${jhome.sysproperties.foreignServerPath}
#======================================#
#========== System settings ===========#
#======================================#
jhome:
  # 系统参数
  sysproperties:
    # redis 地址
    #redissonUrl: redis://${spring.redis.host}:${spring.redis.port}
    # 管理基础路径
    adminPath: account
    # 前端基础路径
    foreignServerPath: RemoteService
    #消息服务配置
    queueconfig:
      #队列服务器地址
      hostName: 192.168.43.93
      #用户名
      userName: daxu
      #密码
      passWord: 13528764027
      #虚拟主机
      virtualHost: dxhost
    redissConfig:
      host: ${spring.redis.host}
      database: ${spring.redis.database}
      port: ${spring.redis.port}
      password: ${spring.redis.password}
      timeout: ${spring.redis.password}
#======================================#
#========== com.nettyServer.Server settings ===========#
#======================================#
server:
  port: 8100
  servlet:
    context-path: /jhome/
  tomcat:
    uri-encoding: UTF-8

#========================================#
#============= 数据库配置地址 =============#
#========== Spring 基础配置信息 ===========#
#=========================================#
spring:
  # 应用程序名称
  application:
    name: jhome-account
  # 当前环境名称（注意：不可设置为 test 它是单元测试专用的名称）
  profiles:
    active: default
  # 打印横幅
  main:
    bannerMode: "CONSOLE"
  thymeleaf:
    prefix: classpath:/templates/  #prefix：指定模板所在的目录
    check-template-location: true  #check-tempate-location: 检查模板路径是否存在
    cache: false  #cache: 是否缓存，开发模式下设置为false，避免改了模板还要重启服务器，线上设置为true，可以提高性能。
    suffix:  .html
    encoding: UTF-8
    #mode: HTML5
    servlet:
      content-type: text/html
  datasource:
    url: jdbc:mysql://192.168.40.129:3306/jhome # jdbc:mysql://10.1.137.101:3306/qas_ynjm_v184
    username: root
    password: 111111
    driver-class-name: com.mysql.cj.jdbc.Driver
    type: com.alibaba.druid.pool.DruidDataSource
  redis:
    host: 192.168.52.130 #10.1.20.66 #10.1.20.66 #192.168.40.129 #192.168.52.130
    database: 0
    port: 6379
    password: 123456
    timeout: 10000
    #客户端超时毫秒数
  cloud:
    loadbalancer:
      ribbon:
        enabled: false

#===============  日志配置 ===========#
#=========================================#
#logging:
#  config: classpath:/config/logback-spring.xml

#=========================================#
#========== Shrio 基础配置信息 ===========#
#    /f/**: authc,
#    /a/**: authc,  #LoginUrl: /${jhome.sysproperties.adminPath}/sys/login

#=========================================#
shiro:
  filterChainDefinitionMap: |

    /login:anon,
    /logout:anon,
    /css/**:anon,
    /images/**:anon,
    /script/**:anon,
    /RemoteService/**:anon,
    /account/**:authc,
    /**:authc
  LoginUrl: /${adminPath}/login
  UnauthorizedUrl: /${adminPath}/sys/error
  #success-url: /${adminPath}/main

#=========================================#
#========== mybase 基础配置信息 ===========#
#=========================================#

#=========================================#
#========== thymeleaf 基础配置信息 ========#
#=========================================#

#=========================================#
#================ 分页配置 ================#
#=========================================#
# 分页配置
pagehelper:
  helper-dialect: mysql
  reasonable: true
  support-methods-arguments: true
  params: count=countSql

#=========================================#
#============= 消息队列服务器地址  ========#
#=========================================#

# ->->->->->->->->->->->->->->->->->->->-> 服务消费者 ->->->->->->->->->->->->->->->->->->->->
#=========================================#
#================ eureka配置 ================#
#=========================================#
###服务注册到eureka注册中心的地址
eureka:
  client:
    service-url:
      defaultZone: http://daxunihao:123456@127.0.0.1:9100/jhome/eureka/
      ###defaultZone: http://daxunihao:123456@127.0.0.1:9100/jhome/eureka/,http://daxunihao:123456@127.0.0.1:9200/jhome/eureka/
    ###因为该应用为服务提供者，是eureka的一个客户端，需要注册到注册中心
    registerWithEureka: true
    ###是否需要从eureka上检索服务
    fetchRegistry: true
  instance:
    instance-id: ${spring.application.name}:${server.port} 账户服务
    prefer-ip-address: true #将自己的ip地址注册到Eureka服务中
    ip-address: 127.0.0.1
    hostname: 127.0.0.1

#ribbon:
#  eureka:
#    enabled: true